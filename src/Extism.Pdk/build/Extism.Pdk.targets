<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
	<ItemGroup>
		<TrimmerRootAssembly Include="Extism.Pdk" />
	</ItemGroup>

	<PropertyGroup>
		<PublishTrimmed>true</PublishTrimmed>
		<WasmBuildNative>true</WasmBuildNative>
		<WasmSingleFileBundle>true</WasmSingleFileBundle>

		<!-- Note: TrimMode Full breaks Extism's global exception handling hook -->
		<TrimMode>partial</TrimMode>
		<DebuggerSupport>false</DebuggerSupport>
		<EventSourceSupport>false</EventSourceSupport>
		<UseSystemResourceKeys>true</UseSystemResourceKeys>
		<NativeDebugSymbols>false</NativeDebugSymbols>
		<UseAppHost>false</UseAppHost>
	</PropertyGroup>

	<Target Name="EnforceDotNet8" BeforeTargets="Build">
		<Error Condition="'$(TargetFramework)' != 'net8.0'" Text="Extism PDK can only be used in projects targeting .NET 8. See https://github.com/extism/dotnet-pdk/issues/110" />
	</Target>

	<UsingTask TaskName="GenerateFFITask" AssemblyFile="$(MSBuildThisFileDirectory)..\build\Extism.Pdk.MSBuild.dll" Condition="'$(RuntimeIdentifier)' == 'wasi-wasm'"/>
	<Target Name="GenerateGlueCode" AfterTargets="Build" BeforeTargets="_BeforeWasmBuildApp" Condition="'$(RuntimeIdentifier)' == 'wasi-wasm'">
		<GenerateFFITask AssemblyPath="$(TargetPath)" OutputPath="$(IntermediateOutputPath)extism" ExtismPath="$(MSBuildThisFileDirectory)..\native\extism.c" />
		<ItemGroup>
			<NativeFileReference Include="$(IntermediateOutputPath)extism\*.c" />
			<_WasmNativeFileForLinking Include="@(NativeFileReference)" />

			<!-- Wrap mono_runtime_run_main because we have to make sure at least one argument is passed in to Mono -->
			<!-- See native/extism.c for the implementation -->
			<_WasiSdkClangArgs Include="-Wl,--wrap=mono_runtime_run_main" />

			<!-- Wrap mono_wasm_load_runtime to ensure mono is loaded only once when _start is called after an exported function -->
			<_WasiSdkClangArgs Include="-Wl,--wrap=mono_wasm_load_runtime" />
		</ItemGroup>
	</Target>
</Project>
